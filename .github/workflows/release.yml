name: Release Version

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permet de lancer manuellement

jobs:
  release:
    runs-on: ubuntu-22.04  # Toujours requis pour exÃ©cuter le job
    container:
      image: node:20-slim  # Image lÃ©gÃ¨re de Node.js 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y jq git
          npm install

      - name: Install jq
        run: |
          apt-get update
          apt-get install -y jq

      - name: Extract & Increment Version (SemVer)
        shell: bash
        run: |
          # Get current version from package.json
          current_version=$(jq -r '.version' package.json)
          
          # Split version into array
          major=$(echo "$current_version" | cut -d. -f1)
          minor=$(echo "$current_version" | cut -d. -f2)
          patch=$(echo "$current_version" | cut -d. -f3)
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          
          # Update package.json
          jq --arg version "$new_version" '.version = $version' package.json > tmp.json
          mv tmp.json package.json
          
          # Update _manifest.yml
          sed -i "s/version: $current_version/version: $new_version/" espanso/_manifest.yml
          
          # Export for other steps
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "Version bumped from $current_version to $new_version"

      - name: Generate Changelog (Commits since last tag)
        run: |
          last_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Last tag: $last_tag"
          
          changelog=$(git log --pretty=format:"- %s" "$last_tag"..HEAD)
          
          if [ -z "$changelog" ]; then
            changelog="No significant changes."
          fi

          echo "$changelog" > changelog.txt
          echo "Changelog:"
          cat changelog.txt

          echo "CHANGELOG=$(cat changelog.txt)" >> $GITHUB_ENV

      - name: Commit & Push Version Bump
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json espanso/_manifest.yml
          git commit -m "ðŸ”– Bump version to ${{ env.NEW_VERSION }}"
          git push origin main

      - name: Create Git Tag
        run: |
          git tag "v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          name: "Release v${{ env.NEW_VERSION }}"
          body: |
            ## ðŸš€ Release v${{ env.NEW_VERSION }}
            **Changelog:**
            ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
